syntax="proto3";

package spdkrpc;

option go_package = "github.com/longhorn/types/pkg/generated/spdkrpc";

import "google/protobuf/empty.proto";

service SPDKService {
    rpc ReplicaCreate(ReplicaCreateRequest) returns (Replica);
    rpc ReplicaDelete(ReplicaDeleteRequest) returns (google.protobuf.Empty);
    rpc ReplicaGet(ReplicaGetRequest) returns (Replica);
    rpc ReplicaSnapshotCreate(SnapshotRequest) returns (Replica);
    rpc ReplicaSnapshotDelete(SnapshotRequest) returns (google.protobuf.Empty);
    rpc ReplicaSnapshotRevert(SnapshotRequest) returns (google.protobuf.Empty);
    rpc ReplicaSnapshotPurge(SnapshotRequest) returns (google.protobuf.Empty);
    rpc ReplicaList(google.protobuf.Empty) returns (ReplicaListResponse);
    rpc ReplicaWatch(google.protobuf.Empty) returns (stream google.protobuf.Empty) {}
    rpc ReplicaRebuildingSrcStart(ReplicaRebuildingSrcStartRequest) returns (ReplicaRebuildingSrcStartResponse) {};
    rpc ReplicaRebuildingSrcFinish(ReplicaRebuildingSrcFinishRequest) returns (google.protobuf.Empty) {};
    rpc ReplicaRebuildingSrcAttach(ReplicaRebuildingSrcAttachRequest) returns (google.protobuf.Empty) {};
    rpc ReplicaRebuildingSrcDetach(ReplicaRebuildingSrcDetachRequest) returns (google.protobuf.Empty) {};
    rpc ReplicaRebuildingSrcShallowCopyStart(ReplicaRebuildingSrcShallowCopyStartRequest) returns (ReplicaRebuildingSrcShallowCopyStartResponse);
    rpc ReplicaRebuildingSrcShallowCopyCheck(ReplicaRebuildingSrcShallowCopyCheckRequest) returns (ReplicaRebuildingSrcShallowCopyCheckResponse) {};
    rpc ReplicaRebuildingDstStart(ReplicaRebuildingDstStartRequest) returns (ReplicaRebuildingDstStartResponse) {};
    rpc ReplicaRebuildingDstFinish(ReplicaRebuildingDstFinishRequest) returns (google.protobuf.Empty) {};
    rpc ReplicaRebuildingDstShallowCopyStart(ReplicaRebuildingDstShallowCopyStartRequest) returns (google.protobuf.Empty);
    rpc ReplicaRebuildingDstShallowCopyCheck(ReplicaRebuildingDstShallowCopyCheckRequest) returns (ReplicaRebuildingDstShallowCopyCheckResponse) {};
    rpc ReplicaRebuildingDstSnapshotCreate(SnapshotRequest) returns (google.protobuf.Empty);
    rpc ReplicaRebuildingDstSnapshotRevert(SnapshotRequest) returns (ReplicaRebuildingDstSnapshotRevertResponse) {};
    rpc ReplicaBackupCreate(BackupCreateRequest) returns (BackupCreateResponse) {}
    rpc ReplicaBackupStatus(BackupStatusRequest) returns (BackupStatusResponse) {}
    rpc ReplicaBackupRestore(ReplicaBackupRestoreRequest) returns (google.protobuf.Empty) {}
    rpc ReplicaRestoreStatus(ReplicaRestoreStatusRequest) returns (ReplicaRestoreStatusResponse) {}

    rpc EngineCreate(EngineCreateRequest) returns (Engine);
    rpc EngineDelete(EngineDeleteRequest) returns (google.protobuf.Empty);
    rpc EngineGet(EngineGetRequest) returns (Engine);
    rpc EngineSuspend(EngineSuspendRequest) returns (google.protobuf.Empty);
    rpc EngineResume(EngineResumeRequest) returns (google.protobuf.Empty);
    rpc EngineSwitchOverTarget(EngineSwitchOverTargetRequest) returns (google.protobuf.Empty);
    rpc EngineDeleteTarget(EngineDeleteTargetRequest) returns (google.protobuf.Empty);
    rpc EngineSnapshotCreate(SnapshotRequest) returns (SnapshotResponse);
    rpc EngineSnapshotDelete(SnapshotRequest) returns (google.protobuf.Empty);
    rpc EngineSnapshotRevert(SnapshotRequest) returns (google.protobuf.Empty);
    rpc EngineSnapshotPurge(SnapshotRequest) returns (google.protobuf.Empty);
    rpc EngineList(google.protobuf.Empty) returns (EngineListResponse);
    rpc EngineWatch(google.protobuf.Empty) returns (stream google.protobuf.Empty) {}
    rpc EngineReplicaList(EngineReplicaListRequest) returns (EngineReplicaListResponse) {}
    rpc EngineReplicaAdd(EngineReplicaAddRequest) returns (google.protobuf.Empty) {}
    rpc EngineReplicaDelete(EngineReplicaDeleteRequest) returns (google.protobuf.Empty) {}
    rpc EngineBackupCreate(BackupCreateRequest) returns (BackupCreateResponse) {}
    rpc EngineBackupStatus(BackupStatusRequest) returns (BackupStatusResponse) {}
    rpc EngineBackupRestore(EngineBackupRestoreRequest) returns (EngineBackupRestoreResponse) {}
    rpc EngineRestoreStatus(RestoreStatusRequest) returns (RestoreStatusResponse) {}

    rpc DiskCreate(DiskCreateRequest) returns (Disk);
    rpc DiskDelete(DiskDeleteRequest) returns (google.protobuf.Empty);
    rpc DiskGet(DiskGetRequest) returns (Disk);

    rpc LogSetLevel(LogSetLevelRequest) returns (google.protobuf.Empty);
    rpc LogSetFlags(LogSetFlagsRequest) returns (google.protobuf.Empty);
    rpc LogGetLevel(google.protobuf.Empty) returns (LogGetLevelResponse);
    rpc LogGetFlags(google.protobuf.Empty) returns (LogGetFlagsResponse);

    rpc VersionDetailGet(google.protobuf.Empty) returns(VersionDetailGetReply);
}

message Lvol {
    string name = 1;
    string uuid = 2;
    uint64 spec_size = 3;
    uint64 actual_size = 4;
    string parent = 5;
    map<string, bool> children = 6;
    string creation_time = 7;
    bool user_created = 8;
    string snapshot_timestamp = 9;
}

message Replica {
    string name = 1;
    string lvs_name = 2;
    string lvs_uuid = 3;
    uint64 spec_size = 4;
    uint64 actual_size = 5;
    string ip = 6;
    int32 port_start = 7;
    int32 port_end = 8;
    Lvol head = 9;
    map<string, Lvol> snapshots = 10;
    bool rebuilding = 11;
    string state = 12;
    string error_msg = 13;
}

message ReplicaCreateRequest {
    string name = 1;
    string lvs_name = 2;
    string lvs_uuid = 3;
    uint64 spec_size = 4;
    int32 port_count = 5;
}

message ReplicaDeleteRequest {
    string name = 1;
    bool cleanup_required = 2;
}

message ReplicaGetRequest {
    string name = 1;
}

message ReplicaListResponse {
	map<string, Replica> replicas = 1;
}

enum ReplicaMode {
    WO = 0;
    RW = 1;
    ERR = 2;
}

message ReplicaRebuildingSrcStartRequest {
    string name = 1;
    string dst_replica_name = 2;
    string dst_replica_address = 3;
    string exposed_snapshot_name = 4;
}

message ReplicaRebuildingSrcStartResponse {
    string exposed_snapshot_lvol_address = 1;
}

message ReplicaRebuildingSrcFinishRequest {
    string name = 1;
    string dst_replica_name = 2;
}

message ReplicaRebuildingSrcAttachRequest {
    string name = 1;
    string dst_replica_name = 2;
    string dst_rebuilding_lvol_address = 3;
}

message ReplicaRebuildingSrcDetachRequest {
    string name = 1;
    string dst_replica_name = 2;
}

message ReplicaRebuildingSrcShallowCopyStartRequest {
    string name = 1;
    string snapshot_name = 2;
}

message ReplicaRebuildingSrcShallowCopyStartResponse {
    uint32 shallow_copy_op_id = 1;
}

message ReplicaRebuildingSrcShallowCopyCheckRequest {
    string name = 1;
    string dst_replica_name = 2;
    string snapshot_name = 3;
    uint32 shallow_copy_op_id = 4;
}

message ReplicaRebuildingSrcShallowCopyCheckResponse {
    string state = 1;
    uint64 copied_clusters = 2;
    uint64 total_clusters = 3;
    string error_msg = 4;
}

message ReplicaRebuildingDstStartRequest {
    string name = 1;
    string src_replica_name = 2;
    string src_replica_address = 3;
    string external_snapshot_name = 4;
    string external_snapshot_address = 5;
    repeated Lvol rebuilding_snapshot_list = 6;
}

message ReplicaRebuildingDstStartResponse {
    string dst_head_lvol_address = 1;
}

message ReplicaRebuildingDstFinishRequest {
    string name = 1;
}

message ReplicaRebuildingDstShallowCopyStartRequest {
    string name = 1;
    string snapshot_name = 2;
}

message ReplicaRebuildingDstShallowCopyCheckRequest {
    string name = 1;
}

message ReplicaRebuildingDstShallowCopyCheckResponse {
    string src_replica_name = 1;
    string src_replica_address = 2;
    string snapshot_name = 3;
    string state = 4;
    uint32 progress = 5;
    string total_state = 6;
    uint32 total_progress = 7;
    string error = 8;
}

message ReplicaRebuildingDstSnapshotRevertResponse {
    string dst_rebuilding_lvol_address = 1;
}

message Engine {
    string name = 1;
    string volume_name = 2;
    uint64 spec_size = 3;
    uint64 actual_size = 4;
    string ip = 5;
    int32 port = 6;
    map<string, string> replica_address_map = 7;
    map<string, ReplicaMode> replica_mode_map = 8;
    Lvol head = 9;
    map<string, Lvol> snapshots = 10;
    string frontend = 11;
    string endpoint = 12;
    string state = 13;
    string error_msg = 14;
    string target_ip = 15;
    int32 target_port = 16;
}

message EngineCreateRequest {
    string name = 1;
    string volume_name = 2;
    uint64 spec_size = 3;
    map<string, string> replica_address_map = 4;
    string frontend = 5;
    int32 port_count = 6;
    bool upgrade_required = 7;
    string initiator_address = 8;
    string target_address = 9;
}

message EngineDeleteRequest {
    string name = 1;
}

message EngineGetRequest {
    string name = 1;
}

message EngineSuspendRequest {
    string name = 1;
}

message EngineResumeRequest {
    string name = 1;
}

message EngineSwitchOverTargetRequest {
    string name = 1;
    string target_address = 2;
}

message EngineDeleteTargetRequest {
    string name = 1;
}

message EngineListResponse {
	map<string, Engine> engines = 1;
}

message EngineReplicaAddRequest {
    string engine_name = 1;
    string replica_name = 2;
    string replica_address = 3;
}


message EngineReplicaListRequest {
    string engine_name = 1;
}

message EngineReplicaListResponse {
    map<string, Replica> replicas = 1;
}

message EngineReplicaDeleteRequest {
    string engine_name = 1;
    string replica_name = 2;
    string replica_address = 3;
}

message EngineReplicaRebuildStatusRequest {
    string engine_name = 1;
    string replica_name = 2;
}

message EngineReplicaRebuildStatusResponse {
    string replica_name = 1;
    string snapshot_name = 2;
    string state = 3;
    int32 progress = 4;
    string error = 5;
    string src_replica_name = 6;
    string src_replica_address = 7;
}

message SnapshotRequest {
    string name = 1;
    string snapshot_name = 2;
    bool user_created = 3;
    string snapshot_timestamp = 4;
}

message SnapshotResponse {
    string snapshot_name = 1;
}

message VersionOutput {
    string version = 1;
    string gitCommit = 2;
    string buildDate = 3;

    int64 cliAPIVersion = 4;
    int64 cliAPIMinVersion = 5;
    int64 controllerAPIVersion = 6;
    int64 controllerAPIMinVersion = 7;
    int64 dataFormatVersion = 8;
    int64 dataFormatMinVersion = 9;
}

message VersionDetailGetReply {
    VersionOutput version = 1;
}

message BackupCreateRequest {
    string snapshot_name = 1;
    string backup_target = 2;
    string volume_name = 3;
    int64 size = 4;
    string engine_name = 5;
    string replica_name = 6;
    repeated string labels = 7;
    map<string, string> credential = 8;
    string backing_image_name = 9;
    string backing_image_checksum = 10;
    string backup_name = 11;
    string compression_method = 12;
    int32 concurrent_limit = 13;
    string storage_class_name = 14;
}

message BackupCreateResponse {
    string backup = 1;
    bool is_incremental = 2;
    string replica_address = 3;
}

message BackupStatusRequest {
    string backup = 1;
    string engine_name = 2;
    string replica_address = 3;
}

message BackupStatusResponse {
    int32 progress = 1;
    string backup_url = 2;
    string error = 3;
    string snapshot_name = 4;
    string state = 5;
    string replica_address = 6;
}

message EngineBackupRestoreRequest {
    string backup_url = 1;
    string engine_name = 2;
    string snapshot_name = 3;
    map<string, string> credential = 4;
    int32 concurrent_limit = 5;
}

message EngineBackupRestoreResponse {
    map<string, string> errors = 4;
}

message ReplicaBackupRestoreRequest {
    string backup_url = 1;
    string replica_name = 2;
    string snapshot_name = 3;
    map<string, string> credential = 4;
    int32 concurrent_limit = 5;
}

message RestoreStatusRequest {
    string engine_name = 1;
}

message ReplicaRestoreStatusRequest {
    string replica_name = 2;
}

message ReplicaRestoreStatusResponse {
    string replica_name = 1;
    string replica_address = 2;
    bool is_restoring = 3;
    string last_restored = 4;
    int32 progress = 5;
    string error = 6;
    string dest_file_name = 7;
    string state = 8;
    string backup_url = 9;
    string current_restoring_backup = 10;
}

message RestoreStatusResponse {
    map<string, ReplicaRestoreStatusResponse> status = 1;
}

message Disk {
    string id = 1;
    string uuid = 2;
    string path = 3;
    string type = 4;

    int64 total_size = 5;
    int64 free_size = 6;

    int64 total_blocks = 7;
    int64 free_blocks = 8;

    int64 block_size = 9;
    int64 cluster_size = 10;

    string driver = 11;
    string name = 12;
}

message DiskCreateRequest {
    string disk_name = 1;
    string disk_uuid = 2;
    string disk_path = 3;
    int64 block_size = 4;
    string disk_driver = 5;
}

message DiskGetRequest {
    string disk_name = 1;
    string disk_driver = 2;
    string disk_path = 3;
}

message DiskDeleteRequest {
    string disk_name = 1;
    string disk_uuid = 2;
    string disk_path = 3;
    string disk_driver = 4;
}

message LogSetLevelRequest {
	string level = 1;
}

message LogSetFlagsRequest {
	string flags = 1;
}

message LogGetLevelResponse {
	string level = 1;
}

message LogGetFlagsResponse {
	string flags = 1;
}
